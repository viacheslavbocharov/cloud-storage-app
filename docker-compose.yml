services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile.dev
    image: cloud-storage-app-auth-service:v1.1.0
    container_name: auth-service
    depends_on:
      - mongo
    env_file:
      - ./backend/auth-service/.env
    ports:
      - '3001:3001'
    restart: always
    volumes:
      - ./backend/auth-service:/app
      - /app/node_modules
    
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile.dev
    image: cloud-storage-app-user-service:v1.1.0
    container_name: user-service
    depends_on:
      - mongo
    env_file:
      - ./backend/user-service/.env
    ports:
      - '3002:3002'
    restart: always
    volumes:
      - ./backend/user-service:/app
      - /app/node_modules

    file-service:
      build:
        context: ./backend/file-service
        dockerfile: Dockerfile.dev
      image: cloud-storage-app-file-service:v1.1.0
      container_name: file-service
      depends_on:
        - mongo
      env_file:
        - ./backend/file-service/.env
      ports:
        - '3003:3003'
      restart: always
      volumes:
        - ./backend/file-service:/app
        - /app/node_modules
        - ./backend/file-service/uploads:/app/uploads
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3003/files/health"]
        interval: 10s
        timeout: 5s
        retries: 3

volumes:
  mongo_data:
